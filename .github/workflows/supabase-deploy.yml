name: Supabase Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'supabase/**'
      - '.github/workflows/supabase-deploy.yml'

  pull_request:
    branches:
      - main
    paths:
      - 'supabase/**'
      - '.github/workflows/supabase-deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Supabase CLI
      run: |
        curl -sL https://supabase.com/docs/guides/cli/getting-started | bash
        supabase --version

    - name: Configure Supabase credentials
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      run: |
        supabase login --access-token $SUPABASE_ACCESS_TOKEN
        supabase link --project-ref $SUPABASE_PROJECT_ID

    - name: Run database migrations
      env:
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      run: |
        supabase db push --password $SUPABASE_DB_PASSWORD

    - name: Seed database
      env:
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      run: |
        supabase db seed --password $SUPABASE_DB_PASSWORD

    - name: Deploy Supabase functions
      run: |
        supabase functions deploy

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Supabase deployment ${{ job.status == 'success' && '✅ successful' || '❌ failed' }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
